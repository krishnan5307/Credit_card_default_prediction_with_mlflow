grid_search:
  class: GridSearchCV
  module: sklearn.model_selection
  params:
    cv: 5
    verbose: 2

model_selection:
  module_0:
    class: LogisticRegression
    module: sklearn.linear_model
    params:
      C: 1.0
      solver: 'lbfgs'
    search_param_grid:
      C:
        - 0.1
        - 1.0
        - 10.0
      solver:
        - 'lbfgs'
        - 'liblinear'

  module_1:
    class: RandomForestClassifier
    module: sklearn.ensemble
    params:
      n_estimators: 100
      min_samples_leaf: 1
    search_param_grid:
      n_estimators:
        - 50
        - 100

      min_samples_leaf:
        - 1
        - 3
        

  module_2:
    class: GradientBoostingClassifier
    module: sklearn.ensemble
    params:
      n_estimators: 100
      learning_rate: 0.1
    search_param_grid:
      n_estimators:
        - 50
        - 100
        
      learning_rate:
        - 0.05
        - 0.1
        

  module_3:
    class: DecisionTreeClassifier
    module: sklearn.tree
    params:
      criterion: 'gini'
      min_samples_leaf: 1
    search_param_grid:
      criterion:
        - 'gini'
        - 'entropy'
      min_samples_leaf:
        - 1
        - 3


  module_4:
    class: AdaBoostClassifier
    module: sklearn.ensemble
    params:
      n_estimators: 50
      learning_rate: 1.0
    search_param_grid:
      n_estimators:
        - 50
        - 100

      learning_rate:
        - 0.5
        - 1.0

        
  module_5:
    class: SVC
    module: sklearn.svm
    params:
      C: 1.0
      kernel: 'rbf'
    search_param_grid:
      C:
        - 0.1
        - 0.5
       
      kernel:
        - 'rbf'
        - 'linear'
        - 'sigmoid'

       
 





















# grid_search:
#   class: GridSearchCV
#   module: sklearn.model_selection
#   params:
#     cv: 5
#     verbose: 2
# model_selection:
#   module_0:
#     class: LinearRegression
#     module: sklearn.linear_model
#     params:
#       fit_intercept: true
#     search_param_grid:
#       fit_intercept:
#       - true
#       - false
#   module_1:
#     class: RandomForestRegressor
#     module: sklearn.ensemble
#     params:
#       min_samples_leaf: 3
#     search_param_grid:
#       min_samples_leaf:
#       - 6
#   module_2: 
#     class: GradientBoostingRegressor  
#     module: sklearn.ensemble
#     params:
#       n_estimators: 100
#       criterion: friedman_mse
#     search_param_grid:
#       n_estimators:
#       - 120
#       - 70
#       - 30
#       criterion:
#       - friedman_mse
#       - squared_error
#   module_3: 
#     class: DecisionTreeRegressor  
#     module: sklearn.tree
#     params:
#       criterion: squared_error
#       min_samples_leaf: 3 
#     search_param_grid:
#       criterion:
#       - squared_error
#       - absolute_error
#       min_samples_leaf:
#       - 6 
#   module_4: 
#     class: SVR  
#     module: sklearn.svm
#     params:
#       kernel: rbf
#       gamma: scale
#       min_samples_leaf: 3 
#     search_param_grid:
#       kernel:
#       - rbf
#       - linear
#       - sigmoid
#       gamma:
#       - auto
#   module_5: 
#     class: AdaBoostRegressor  
#     module: sklearn.ensemble
#     params:
#       n_estimators: 50
#       loss: linear
#     search_param_grid:
#       n_estimators:
#       - 100
#       - 70
#       - 30
#       loss:
#       - linear
#       - square
#       - exponential
  